<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.shopping.mapper.PaymentMapper" >
  <resultMap id="BaseResultMap" type="com.online.shopping.model.Payment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="card_type" property="cardType" jdbcType="VARCHAR" />
    <result column="card_holder" property="cardHolder" jdbcType="VARCHAR" />
    <result column="billing_address" property="billingAddress" jdbcType="VARCHAR" />
    <result column="expiration_date" property="expirationDate" jdbcType="DATE" />
    <result column="valid_card_check" property="validCardCheck" jdbcType="TINYINT" />
    <result column="total_payment" property="totalPayment" jdbcType="DECIMAL" />
    <result column="payment_date" property="paymentDate" jdbcType="DATE" />
    <result column="purchase_id" property="purchaseId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, card_type, card_holder, billing_address, expiration_date, valid_card_check, total_payment, 
    payment_date, purchase_id, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getPaymentListByCustomerId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select p.* from
	payment p
	inner join		purchase_history ph on p.purchase_id=ph.id
	inner join		delivery_address da on ph.delevery_address=da.id
    inner join customer c on c.id = da.customer_id
	where c.id=#{id}
  </select>
  <select id="selectByPurchaseId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * FROM
    payment
    WHERE purchase_id=#{id}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.online.shopping.model.Payment" >
    insert into payment (id, card_type, card_holder, 
      billing_address, expiration_date, valid_card_check, 
      total_payment, payment_date, purchase_id, 
      state)
    values (#{id,jdbcType=INTEGER}, #{cardType,jdbcType=VARCHAR}, #{cardHolder,jdbcType=VARCHAR}, 
      #{billingAddress,jdbcType=VARCHAR}, #{expirationDate,jdbcType=DATE}, #{validCardCheck,jdbcType=TINYINT}, 
      #{totalPayment,jdbcType=DECIMAL}, #{paymentDate,jdbcType=DATE}, #{purchaseId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.online.shopping.model.Payment" >
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cardType != null" >
        card_type,
      </if>
      <if test="cardHolder != null" >
        card_holder,
      </if>
      <if test="billingAddress != null" >
        billing_address,
      </if>
      <if test="expirationDate != null" >
        expiration_date,
      </if>
      <if test="validCardCheck != null" >
        valid_card_check,
      </if>
      <if test="totalPayment != null" >
        total_payment,
      </if>
      <if test="paymentDate != null" >
        payment_date,
      </if>
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardType != null" >
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null" >
        #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="billingAddress != null" >
        #{billingAddress,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null" >
        #{expirationDate,jdbcType=DATE},
      </if>
      <if test="validCardCheck != null" >
        #{validCardCheck,jdbcType=TINYINT},
      </if>
      <if test="totalPayment != null" >
        #{totalPayment,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null" >
        #{paymentDate,jdbcType=DATE},
      </if>
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.online.shopping.model.Payment" >
    update payment
    <set >
      <if test="cardType != null" >
        card_type = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null" >
        card_holder = #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="billingAddress != null" >
        billing_address = #{billingAddress,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null" >
        expiration_date = #{expirationDate,jdbcType=DATE},
      </if>
      <if test="validCardCheck != null" >
        valid_card_check = #{validCardCheck,jdbcType=TINYINT},
      </if>
      <if test="totalPayment != null" >
        total_payment = #{totalPayment,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null" >
        payment_date = #{paymentDate,jdbcType=DATE},
      </if>
      <if test="purchaseId != null" >
        purchase_id = #{purchaseId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.online.shopping.model.Payment" >
    update payment
    set card_type = #{cardType,jdbcType=VARCHAR},
      card_holder = #{cardHolder,jdbcType=VARCHAR},
      billing_address = #{billingAddress,jdbcType=VARCHAR},
      expiration_date = #{expirationDate,jdbcType=DATE},
      valid_card_check = #{validCardCheck,jdbcType=TINYINT},
      total_payment = #{totalPayment,jdbcType=DECIMAL},
      payment_date = #{paymentDate,jdbcType=DATE},
      purchase_id = #{purchaseId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
